// AUTOMATICALLY GENERATED BY OPENFEATURE CODEGEN, DO NOT EDIT.
package example_java;
import dev.openfeature.sdk.*;


public class ExperimentFlags {
    private static Client client = OpenFeatureAPI.getInstance().getClient();
    /**
     * Discount percentage applied to purchases.
     */
    public static class DiscountPercentage {
        public static Double getValue(EvaluationContext evaluationContext) {
            return client.getDoubleValue("discountPercentage", 0.15, evaluationContext);
        }

        public static FlagEvaluationDetails<Double> getValueDetails(EvaluationContext evaluationContext) {
            return client.getDoubleDetails("discountPercentage", 0.15, evaluationContext);
        }
    }
    /**
     * Controls whether Feature A is enabled.
     */
    public static class EnableFeatureA {
        public static Boolean getValue(EvaluationContext evaluationContext) {
            return client.getBooleanValue("enableFeatureA", false, evaluationContext);
        }

        public static FlagEvaluationDetails<Boolean> getValueDetails(EvaluationContext evaluationContext) {
            return client.getBooleanDetails("enableFeatureA", false, evaluationContext);
        }
    }
    /**
     * The message to use for greeting users.
     */
    public static class GreetingMessage {
        public static String getValue(EvaluationContext evaluationContext) {
            return client.getStringValue("greetingMessage", "Hello there!", evaluationContext);
        }

        public static FlagEvaluationDetails<String> getValueDetails(EvaluationContext evaluationContext) {
            return client.getStringDetails("greetingMessage", "Hello there!", evaluationContext);
        }
    }
    /**
     * Maximum allowed length for usernames.
     */
    public static class UsernameMaxLength {
        public static Integer getValue(EvaluationContext evaluationContext) {
            return client.getIntegerValue("usernameMaxLength", 50, evaluationContext);
        }

        public static FlagEvaluationDetails<Integer> getValueDetails(EvaluationContext evaluationContext) {
            return client.getIntegerDetails("usernameMaxLength", 50, evaluationContext);
        }
    }
}